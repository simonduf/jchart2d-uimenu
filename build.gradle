buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.layer:gradle-git-repo-plugin:2.0.2'
  }
}
plugins {
  id 'java'
  id 'eclipse'

  //Plugins for code coverage
  id "org.sonarqube" version "1.0"
  id 'jacoco'
  
  //Plugin for having multiple tests
  //https://github.com/unbroken-dome/gradle-testsets-plugin
  //id 'org.unbroken-dome.test-sets' version '1.1.0'
  
  //Plugin to get git information
  //https://github.com/ajoberstar/gradle-git/wiki/release%20plugins%201.x
  id "org.ajoberstar.release-opinion" version "1.4.0-rc.1"
  id "org.ajoberstar.grgit" version "1.4.0-rc.1"
  id "org.ajoberstar.github-pages" version "1.4.0-rc.1"

}
apply plugin: "maven-publish"
apply plugin: 'git-repo'


repositories {
        mavenCentral()
    }


//Release task configuration
	// Usage of the release task : ./gradlew release -Prelease.scope=major -Prelease.stage=final
import org.ajoberstar.grgit.*
release {
	// need to specify the repository to interact with
	grgit = Grgit.open(project.file('.'))
}
//TODO: add depends on other tasks in the release task
//Ex tasks.release.dependsOn 'build', 'publishToMyRepo'

//Task to verify the version string (result of the previous task configuration)
task printVersion {
    doLast { println project.version }
}

sourceCompatibility = 1.6
//version = '1.0.1'
group = 'info.monitorenter'

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

dependencies {
	compile 'net.sf.jchart2d:jchart2d:3.3.2'
	compile 'org.apache.xmlgraphics:fop:2.1'
	
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

gitPublishConfig{
    org = "simonduf"
    repo = "JChart2d-maven"
}

String url() {
    String org =  gitPublishConfig.org
    String repo = gitPublishConfig.repo
    String repoHome = gitPublishConfig.home
    return "file://$repoHome/$org/$repo/releases"
}

publishing {
    publications {
        MyJar(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${gitPublishConfig.home}/${gitPublishConfig.org}/${gitPublishConfig.repo}/releases"
        }
    }
}

//task publishJar(type: Upload, description: "Upload Jar library") {
//    configuration = configurations.MyJar
//    repositories {
//        mavenDeployer {
//            repository(url: url())
//        }
//    }
//}

//githubPages {
//  repoUri = '...'
//  pages {
//    from javadoc
//  }
//}

//task tagRelease << {
//  repo.tag.add {
//    name = version
//    message = "Release of ${version}"
//}

